#!/bin/bash

function usage()
{
    cat <<EOF

  Usage: $0 [-m|--mono]|[-s|--stereo]|[-h|--help]

  Run many programs needed to start a HyperCube session.

  Runs the following 6 programs:

    hy_stopx                   makes sure no user X sessions are running
    hy_kill_dtk-server         kill any dtk-server
    hy_projectors_on [--mono]  turn on projects
    hy_startx                  start a user login X session
    hy_edgeBlend_on            fade the edges of overlapping root windows
    hy_frameLock_on            turn on nvidia frame locking (BROKEN??)
    hy_syncToVBlank_on         turn on nvidia sync to verticle refresh

  By default we turn on the projector for stereo display, not --mono.
  This program does not start dtk-server, given that you, in general,
  do not want it running and it may even conflict with what you may
  want to do.

EOF

    exit 1
}

function Fail()
{
    if [ -n "$1" ] ; then
        echo
        echo "$*"
        echo
    fi

    echo "$0 failed"
    exit 1
}

function Run()
{
    echo "$*"
    if ! $* ; then
        echo
        echo "$* FAILED"
        exit 1
    fi
}


# default mono is off
mono=


while [ -n "$1" ] ; do
    case $1 in
        -h|--h*)
            usage
            ;;
        -m|-mono|--m|--mono)
            mono="--mono"
            ;;
        -s|-stereo|--s|--stereo)
            mono=
            ;;
        *)
            usage
            ;;
    esac
    shift 1
done

# first kill any old user X sessions
# This also wait for many X programs to not
# be running anymore and so this could hang
# forever.
Run hy_stopx
# then kill any old DTK servers
Run hy_kill_dtk-server




# TODO: need an error check here
Run hy_projectors_on $mono

Run hy_startx

# We check that we are running xfce4-session and we can connect
# to the X server and then check that xfce4-session is
# still running.  This is not fool proof, but it's not
# likely that these 3 checks pass and things are not okay
# with running the XFCE X11 session.

# wait for xfwm4 to be running
count=0
sleep 0.5
while ! killall -CONT xfwm4 ; do
	sleep 1
	let count=$count+1
    if [ $count = 40 ] ; then
        cat <<EOF
 Failed ($count seconds) to find xfwm4 running

EOF
	exit 1
    fi
done

# Make sure that the xfce4-session is still running. We have seen xfce4-session
# fail to be running at this point; strange but true.
count=0
while ! killall -CONT xfce4-session ; do
	sleep 1
	let count=$count+1
    if [ $count = 40 ] ; then
        cat <<EOF
 Failed ($count seconds) to find xfce4-session running

EOF
	exit 1
    fi
done

displaySave="$DISPLAY"

# Check all 16 X displays.  Sometimes just one fails.
# We check 15 first because it is the last to display
# at X startup.
for i in 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 ; do
    export DISPLAY=:0.$i
    echo "DISPLAY=:0.$i xset -q"
    xset -q > /dev/null ||\
 Fail "cannot run xset -q on DISPLAY=:0.$i"
done

# Check all 16 X displays.  Sometimes just one fails.
for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ; do
    # This checks and waits for X to draw a widget with
    # a GTK+ window and then exits.
    export DISPLAY=:0.$i
    echo "DISPLAY=:0.$i hy_checkXRunning --sync"
    hy_checkXRunning --sync ||\
 Fail "cannot run GTK+ program on DISPLAY=:0.$i"
done

# We confirmed that we can connect to this X server
# on all 16 display screens
echo "found a good X server at all 16 screens"
[ -n "$displaySave" ] && export DISPLAY="$displaySave"



# TODO: We will not get an error check here until nvidia fixes
# the return status value from the nvidia-settings program
# in hy_syncToVBlank_on

Run hy_edgeBlend_on
# all 2 are nvidia driver scripts.

#This on is broken?  We'll see...
#Run hy_frameLock_on

Run hy_syncToVBlank_on

echo "$0 Started Okay, so it seems."
echo "$0 finished"

